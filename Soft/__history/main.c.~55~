#include <main.h>
#include <stdlib.h>
#include <stdio.h>

#define ADCMAX 255
#define LED1M PIN_B1
#define LED3M PIN_B2
#define LED5M PIN_B3

int16 adc_value;

#int_TIMER0
void  TIMER0_isr(void){
   
}

#int_EXT
void  EXT_isr(void)
{
}

void init()
{
   setup_oscillator (OSC_8MHZ);
   setup_adc_ports (AN0, VSS_VDD);
   setup_adc (ADC_CLOCK_INTERNAL|ADC_TAD_MUL_0);
   setup_timer_0 (RTCC_INTERNAL|RTCC_DIV_32);         //1.0 s overflow
   enable_interrupts (int_TIMER0);
   enable_interrupts (int_EXT);
   enable_interrupts (GLOBAL);
}

unsigned int8 adc_read_data()
{
   adc_value = read_adc(ADC_START_AND_READ);
   int8 value;
   if (2 < adc_value && adc_value < 80) value = 1;
   else if (80 < adc_value && adc_value < 128) value = 2;
   else if (128 < adc_value && adc_value < ADCMAX) value = 3;
   else return 0;
   return value;
}

void time_leds(unsigned int8 value){
   switch (value){
         case 0:
            output_low(LED1M);
            output_low(LED3M);
            output_low(LED5M);
            break;
            
         case 1:
            output_high(LED1M);
            output_low(LED3M);
            output_low(LED5M);
            break;
         
         case 2:
            output_high(LED1M);
            output_high(LED3M);
            output_low(LED5M);
            break;
         
         case 3:
            output_high(LED1M);
            output_high(LED3M);
            output_high(LED5M);
            break;
   }
}

void main()
{
   init();
   set_adc_channel(0);
   delay_us(10);

   while(true){
      unsigned int8 value = adc_read_data();
      time_leds(value);      
   }
}

